{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "0.0.0.1",
    "parameters": {
        "vnet-cidr": {
            "type": "string",
            "metadata": {
                "description": "address space of vnet"
            },
            "defaultValue": "10.0.0.0/16"
        },
        "subnet-cidrs": {
            "type": "array",
            "metadata": {
                "description": "cidr ranges of subnet"
            },
            "defaultValue": [
                "10.0.0.0/24",
                "10.0.1.0/24",
                "10.0.2.0/24"
            ]
        },
        "subnet-names": {
            "type": "array",
            "metadata": {
                "description": "subnet names"
            },
            "defaultValue": [
                "web",
                "app",
                "db"
            ]
        },
        "sqlusername": {
            "type": "string",
            "metadata": {
                "description": "username for the database server"
            }
        },
        "sqlpassword": {
            "type": "securestring",
            "metadata": {
                "description": "password for database server"
            }
        },
        "vmusername": {
            "type": "string",
            "metadata": {
                "description": "description"
            }
        },
        "vmpassword": {
            "type": "securestring",
            "metadata": {
                "description": "description"
            }
        }
    },
    "variables": {
        "location": "[resourceGroup().location]",
        "httpport": "80",
        "sshport": "22",
        "appport": "80",
        "httpsport": "443",
        "protocol": "Tcp",
        "anywhere": "*",
        "allow": "Allow",
        "inbound": "Inbound"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "name": "webnsg",
            "location": "[variables('location')]",
            "tags": {
                "project": "qtlearning",
                "env": "dev"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "allowssh",
                        "properties": {
                            "access": "[variables('allow')]",
                            "protocol": "[variables('protocol')]",
                            "priority": 300,
                            "direction": "[variables('inbound')]",
                            "sourceAddressPrefix": "[variables('anywhere')]",
                            "sourcePortRange": "[variables('anywhere')]",
                            "destinationPortRange": "[variables('sshport')]",
                            "destinationAddressPrefix": "[variables('anywhere')]"
                        }
                    },
                    {
                        "name": "allowhttp",
                        "properties": {
                            "access": "[variables('allow')]",
                            "protocol": "[variables('protocol')]",
                            "priority": 310,
                            "direction": "[variables('inbound')]",
                            "sourceAddressPrefix": "[variables('anywhere')]",
                            "sourcePortRange": "[variables('anywhere')]",
                            "destinationPortRange": "[variables('httpport')]",
                            "destinationAddressPrefix": "*"
                        }
                    },
                    {
                        "name": "allowhttps",
                        "properties": {
                            "access": "[variables('allow')]",
                            "protocol": "[variables('protocol')]",
                            "priority": 320,
                            "direction": "[variables('inbound')]",
                            "sourceAddressPrefix": "[variables('anywhere')]",
                            "sourcePortRange": "[variables('anywhere')]",
                            "destinationPortRange": "[variables('httpsport')]",
                            "destinationAddressPrefix": "[variables('anywhere')]"
                        }
                    }
                ]

            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', 'ntier')]"
            ]
        },
        {
            "name": "appnsg",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allowssh",
                        "properties": {
                            "protocol": "[variables('protocol')]",
                            "sourcePortRange": "[variables('anywhere')]",
                            "destinationPortRange": "[variables('sshport')]",
                            "sourceAddressPrefix": "[parameters('vnet-cidr')]",
                            "destinationAddressPrefix": "[variables('anywhere')]",
                            "access": "[variables('allow')]",
                            "priority": 300,
                            "direction": "[variables('inbound')]"
                        }
                    },
                    {
                        "name": "allowappport",
                        "properties": {
                            "protocol": "[variables('protocol')]",
                            "sourcePortRange": "[variables('anywhere')]",
                            "destinationPortRange": "[variables('appport')]",
                            "sourceAddressPrefix": "[parameters('vnet-cidr')]",
                            "destinationAddressPrefix": "[variables('anywhere')]",
                            "access": "[variables('allow')]",
                            "priority": 310,
                            "direction": "[variables('inbound')]"
                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', 'ntier')]"
            ]
        },
        {
            "name": "ntier",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "location": "[variables('location')]",
            "tags": {
                "displayName": "ntier-vnet"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnet-cidr')]"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat('ntier','/',parameters('subnet-names')[copyIndex()])]",
            "properties": {
                "addressPrefix": "[parameters('subnet-cidrs')[copyIndex()]]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', 'ntier')]"
            ],
            "copy": {
                "name": "subnetcopy",
                "count": "[length(parameters('subnet-cidrs'))]",
                "mode": "Serial"
            }
        },
        {
            "name": "qtdbserverfromarm",
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2022-02-01-preview",
            "location": "[variables('location')]",
            "tags": {
                "displayName": "qtdbserverfromarm"
            },
            "properties": {
                "administratorLogin": "[parameters('sqlusername')]",
                "administratorLoginPassword": "[parameters('sqlpassword')]"
            },
            "resources": [
                {
                    "type": "firewallRules",
                    "apiVersion": "2014-04-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers', 'qtdbserverfromarm')]"
                    ],
                    "location": "[variables('location')]",
                    "name": "AllowAllWindowsAzureIps",
                    "properties": {
                        "startIpAddress": "0.0.0.0",
                        "endIpAddress": "255.255.255.255"
                    }
                }
            ]
        },
        {
            "name": "qtdbserverfromarm/sampledb",
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2022-02-01-preview",
            "location": "[variables('location')]",
            "tags": {
                "displayName": "sampledb"
            },
            "sku": {
                "name": "Basic"

            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', 'qtdbserverfromarm')]"
            ],
            "properties": {

            }
        },
        {
            "name": "webip",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "location": "[variables('location')]",
            "tags": {
                "displayName": "webip"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "qtwebapp"
                }
            }
        },
        {
            "name": "webnic",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "webnic"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', 'ntier')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups','webnsg')]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets','ntier',parameters('subnet-names')[0])]",
                "[resourceId('Microsoft.Network/publicIPAddresses','webip')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'ntier', parameters('subnet-names')[0])]",
                                "properties": {
                                    "networkSecurityGroup": {
                                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups','webnsg')]"
                                    }
                                }
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses','webip')]"
                            }
                        }
                    }
                ]
            }

        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2022-03-01",
            "name": "qtwebvm",
            "location": "[variables('location')]",
            "properties": {
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces','webnic')]",
                            "properties": {
                                "deleteOption": "Delete"
                            }
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "qtwebvm",
                    "adminPassword": "[parameters('vmpassword')]",
                    "adminUsername": "[parameters('vmusername')]"
                },
                "hardwareProfile": {
                    "vmSize": "Standard_B1s"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    },
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "001-com-ubuntu-server-jammy",
                        "sku": "22_04-lts-gen2",
                        "version": "latest"
                    }
                }

            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces','webnic')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups','webnsg')]"


            ]

        }


    ]
}